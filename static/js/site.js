(function($) {
  return $(function() {
    var TimerInterval, mySwiper, sliderTimerHover, transform;
    console.log("DOM is ready");
    TimerInterval = function(callback, delay) {
      var remaining, timerId;
      timerId = void 0;
      remaining = delay;
      this.pause = function() {
        return clearTimeout(timerId);
      };
      this.resume = function() {
        clearTimeout(timerId);
        return timerId = setInterval(callback, remaining);
      };
      return this.resume();
    };
    $('#serviceTabs a:first').tab('show');
    sliderTimerHover = null;
    $('#serviceTabs .tab').hover(function() {
      if (sliderTimerHover) {
        clearTimeout(sliderTimerHover);
      }
      return sliderTimerHover = setTimeout((function(_this) {
        return function() {
          return $(_this).tab('show');
        };
      })(this), $('#serviceSlider').data('sliderTimeoutHover'));
    });
    $('#serviceSlider .icon-right').click(function() {
      var $next;
      $next = $('#serviceTabs .active').next().find('a');
      if (!$next.length) {
        $next = $('#serviceTabs a:first');
      }
      return $next.tab('show');
    });
    $('#serviceSlider .icon-left').click(function() {
      var $next;
      $next = $('#serviceTabs .active').prev().find('a');
      if (!$next.length) {
        $next = $('#serviceTabs a:last');
      }
      return $next.tab('show');
    });
    transform = function(a, b) {
      b.classList.remove('hidden');
      ramjet.transform(a, b, {
        done: function() {
          return b.classList.remove('hidden');
        }
      });
      a.classList.add('hidden');
      return b.classList.add('hidden');
    };
    $('.whyus-intro').click(function() {
      return transform(this, this.nextSibling);
    });
    $('.whyus-detail').click(function() {
      return transform(this, this.previousSibling);
    });
    $('.hypher').hyphenate('ru');
    return mySwiper = new Swiper('.swiper-container', {
      loop: true,
      pagination: '.swiper-pagination',
      nextButton: '.swiper-button-next',
      prevButton: '.swiper-button-prev',
      effect: 'coverflow',
      grabCursor: true,
      centeredSlides: true,
      slidesPerView: 'auto',
      coverflow: {
        rotate: 50,
        stretch: 0,
        depth: 100,
        modifier: 1,
        slideShadows: true
      }
    });
  });
})(jQuery);

//# sourceMappingURL=data:application/json;base64,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RlA7QUFBQSxRQUdBLFFBQUEsRUFBVSxDQUhWO0FBQUEsUUFJQSxZQUFBLEVBQWMsSUFKZDtPQVpGO0tBRGEsRUFqRmY7RUFBQSxDQUFGLEVBREQ7QUFBQSxDQUFELENBQUEsQ0FzR0UsTUF0R0YsQ0FBQSxDQUFBIiwiZmlsZSI6InNpdGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoKCQpIC0+XG4gICQgLT5cbiAgICBjb25zb2xlLmxvZyhcIkRPTSBpcyByZWFkeVwiKVxuXG4jICAgIHNsaWRlclxuICAgIFRpbWVySW50ZXJ2YWwgPSAoY2FsbGJhY2ssIGRlbGF5KSAtPlxuICAgICAgdGltZXJJZCA9IHVuZGVmaW5lZFxuICAgICAgcmVtYWluaW5nID0gZGVsYXlcbiAgICAgIEBwYXVzZSA9IC0+XG4gICAgICAgIGNsZWFyVGltZW91dCB0aW1lcklkXG4gICAgICBAcmVzdW1lID0gLT5cbiAgICAgICAgY2xlYXJUaW1lb3V0IHRpbWVySWRcbiAgICAgICAgdGltZXJJZCA9IHNldEludGVydmFsKGNhbGxiYWNrLCByZW1haW5pbmcpXG4gICAgICBAcmVzdW1lKClcblxuICAgICQoJyNzZXJ2aWNlVGFicyBhOmZpcnN0JykudGFiKCdzaG93JylcblxuIyAgICBzbGlkZXJUaW1lciA9IG5ldyBUaW1lckludGVydmFsKCgtPlxuIyAgICAgICQoJyNzZXJ2aWNlU2xpZGVyIC5pY29uLXJpZ2h0JykuY2xpY2soKVxuIyAgICApLCAkKCcjc2VydmljZVNsaWRlcicpLmRhdGEoJ3NsaWRlclRpbWVvdXQnKSlcblxuICAgIHNsaWRlclRpbWVySG92ZXIgPSBudWxsXG4gICAgJCgnI3NlcnZpY2VUYWJzIC50YWInKS5ob3ZlciAtPlxuICAgICAgY2xlYXJUaW1lb3V0KHNsaWRlclRpbWVySG92ZXIpIGlmIHNsaWRlclRpbWVySG92ZXJcbiAgICAgIHNsaWRlclRpbWVySG92ZXIgPSBzZXRUaW1lb3V0KCAoKSA9PlxuICAgICAgICAkKEApLnRhYiAnc2hvdydcbiAgICAgICwgJCgnI3NlcnZpY2VTbGlkZXInKS5kYXRhKCdzbGlkZXJUaW1lb3V0SG92ZXInKSlcblxuIyAgICAkKCcjc2VydmljZVRhYnMgLnRhYiwgI3NlcnZpY2VTbGlkZXInKS5ob3ZlcihcbiMgICAgICAtPlxuIyAgICAgICAgc2xpZGVyVGltZXIucGF1c2UoKVxuIyAgICAgICwtPlxuIyAgICAgICAgc2xpZGVyVGltZXIucmVzdW1lKClcbiMgICAgKVxuXG5cbiAgICAkKCcjc2VydmljZVNsaWRlciAuaWNvbi1yaWdodCcpLmNsaWNrIC0+XG4gICAgICAkbmV4dCA9ICQoJyNzZXJ2aWNlVGFicyAuYWN0aXZlJykubmV4dCgpLmZpbmQoJ2EnKVxuICAgICAgJG5leHQgPSAkKCcjc2VydmljZVRhYnMgYTpmaXJzdCcpIGlmICghJG5leHQubGVuZ3RoKVxuICAgICAgJG5leHQudGFiICdzaG93J1xuICAgICQoJyNzZXJ2aWNlU2xpZGVyIC5pY29uLWxlZnQnKS5jbGljayAtPlxuICAgICAgJG5leHQgPSAkKCcjc2VydmljZVRhYnMgLmFjdGl2ZScpLnByZXYoKS5maW5kKCdhJylcbiAgICAgICRuZXh0ID0gJCgnI3NlcnZpY2VUYWJzIGE6bGFzdCcpIGlmICghJG5leHQubGVuZ3RoKVxuICAgICAgJG5leHQudGFiICdzaG93J1xuXG5cblxuIyAgICBzbGlkZXJUaW1lci5wYXVzZSgpXG5cbiMgICAgc2V0VGltZW91dCgoLT5cbiMgICAgICBzbGlkZXJUaW1lci5yZXN1bWUoKVxuIyAgICApLCAxMTAwKVxuIyNcbiMgICAgc2V0VGltZW91dCgoLT5cbiMgICAgICBzbGlkZXJUaW1lci5wYXVzZSgpXG4jICAgICksIDIxMDApXG4jXG4jICAgIHNldFRpbWVvdXQoKC0+XG4jICAgICAgc2xpZGVyVGltZXIucmVzdW1lKClcbiMgICAgKSwgMzEwMClcbiNcbiMgICAgc2V0VGltZW91dCgoLT5cbiMgICAgICBzbGlkZXJUaW1lci5wYXVzZSgpXG4jICAgICksIDQxMDApXG5cblxuICAgIHRyYW5zZm9ybSA9IChhLCBiKSAtPlxuICAgICAgIyBzZXQgdGhlIHN0YWdlIHNvIHJhbWpldCBjb3BpZXMgdGhlIHJpZ2h0IHN0eWxlcy4uLlxuICAgICAgYi5jbGFzc0xpc3QucmVtb3ZlICdoaWRkZW4nXG4gICAgICByYW1qZXQudHJhbnNmb3JtIGEsIGIsIGRvbmU6IC0+XG4gICAgICAgICMgdGhpcyBmdW5jdGlvbiBpcyBjYWxsZWQgYXMgc29vbiBhcyB0aGUgdHJhbnNpdGlvbiBjb21wbGV0ZXNcbiAgICAgICAgYi5jbGFzc0xpc3QucmVtb3ZlICdoaWRkZW4nXG4gICAgICAjIC4uLnRoZW4gaGlkZSB0aGUgb3JpZ2luYWwgZWxlbWVudHMgZm9yIHRoZSBkdXJhdGlvbiBvZiB0aGUgdHJhbnNpdGlvblxuICAgICAgYS5jbGFzc0xpc3QuYWRkICdoaWRkZW4nXG4gICAgICBiLmNsYXNzTGlzdC5hZGQgJ2hpZGRlbidcblxuICAgICQoJy53aHl1cy1pbnRybycpLmNsaWNrIC0+IHRyYW5zZm9ybShALCBALm5leHRTaWJsaW5nKVxuICAgICQoJy53aHl1cy1kZXRhaWwnKS5jbGljayAtPiB0cmFuc2Zvcm0oQCwgQC5wcmV2aW91c1NpYmxpbmcpXG5cbiAgICAkKCcuaHlwaGVyJykuaHlwaGVuYXRlKCdydScpXG5cbiMgICBnYWxsZXJ5XG4gICAgbXlTd2lwZXIgPSBuZXcgU3dpcGVyKCcuc3dpcGVyLWNvbnRhaW5lcicsXG4gICAgICBsb29wOiB0cnVlXG4gICAgICBwYWdpbmF0aW9uOiAnLnN3aXBlci1wYWdpbmF0aW9uJ1xuICAgICAgbmV4dEJ1dHRvbjogJy5zd2lwZXItYnV0dG9uLW5leHQnXG4gICAgICBwcmV2QnV0dG9uOiAnLnN3aXBlci1idXR0b24tcHJldidcbiMgICAgICBzY3JvbGxiYXI6ICcuc3dpcGVyLXNjcm9sbGJhcidcbiMgICAgICBzcGVlZDogNDAwXG4jICAgICAgc3BhY2VCZXR3ZWVuOiAxMDBcbiAgICAgIGVmZmVjdDogJ2NvdmVyZmxvdydcbiAgICAgIGdyYWJDdXJzb3I6IHRydWVcbiAgICAgIGNlbnRlcmVkU2xpZGVzOiB0cnVlXG4gICAgICBzbGlkZXNQZXJWaWV3OiAnYXV0bydcbiAgICAgIGNvdmVyZmxvdzpcbiAgICAgICAgcm90YXRlOiA1MFxuICAgICAgICBzdHJldGNoOiAwXG4gICAgICAgIGRlcHRoOiAxMDBcbiAgICAgICAgbW9kaWZpZXI6IDFcbiAgICAgICAgc2xpZGVTaGFkb3dzOiB0cnVlXG4gICAgKVxuXG4pIGpRdWVyeVxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9